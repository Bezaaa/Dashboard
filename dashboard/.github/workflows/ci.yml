name: Next.js CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev



jobs:
  quality-checks:
    name: "✅ Lint & Format"
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: ✨ Run Prettier
        run: npm run prettier

      - name: 🔬 Run Linter (Next.js ESLint)
        run: npm run lint

  deploy:
    name: "🚀 Deploy to Vercel"
    needs: quality-checks
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: 🚀 Deploy to Vercel
        id: vercel-deploy
        run: |
          # Install Vercel CLI
          npm install -g vercel

          # Link the project automatically with --yes
          vercel link --yes --token ${{ secrets.VERCEL_TOKEN }}

          # Deploy the project (use --prod for production URL)
          DEPLOY_OUTPUT=$(vercel --prod --token ${{ secrets.VERCEL_TOKEN }} 2>&1)

          # Extract the deployment URL from output
          DEPLOY_URL=$(echo "$DEPLOY_OUTPUT" | grep -o 'https://[^[:space:]]*' | head -1)
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV
          echo "Deployment URL: $DEPLOY_URL"

      - name: 📝 Print Deployment URL
        run: |
          echo "Production Deployment URL: $DEPLOY_URL"
          echo "Production URL: https://dashboard-mu-azure-39.vercel.app"

  comment-on-pr:
    name: "💬 Comment on PR"
    needs: [quality-checks, deploy]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: 💬 Create PR Comment with Links
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Deployment successful!**\n\n✅ All quality checks passed.\n🔗 **Preview URL:** ${{ env.DEPLOY_URL }}\n🔗 **Production URL:** https://dashboard-mu-azure-39.vercel.app`
            })